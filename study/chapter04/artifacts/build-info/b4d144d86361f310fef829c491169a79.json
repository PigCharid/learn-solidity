{
	"id": "b4d144d86361f310fef829c491169a79",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"study/chapter04/assert.sol": {
				"content": "// SPDX-License-Identifier:MIT\npragma solidity 0.8;\n\ncontract testAsset{\n        function testAssert(uint i)external pure{\n        assert(i>10);//判断为false时会报错\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"study/chapter04/assert.sol": {
				"testAsset": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "i",
									"type": "uint256"
								}
							],
							"name": "testAssert",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"study/chapter04/assert.sol\":53:180  contract testAsset{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"study/chapter04/assert.sol\":53:180  contract testAsset{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x246ce3f9\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"study/chapter04/assert.sol\":81:178  function testAssert(uint i)external pure{... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"study/chapter04/assert.sol\":140:142  10 */\n      0x0a\n        /* \"study/chapter04/assert.sol\":138:139  i */\n      dup2\n        /* \"study/chapter04/assert.sol\":138:142  i>10 */\n      gt\n        /* \"study/chapter04/assert.sol\":131:143  assert(i>10) */\n      tag_9\n      jumpi\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n    tag_9:\n        /* \"study/chapter04/assert.sol\":81:178  function testAssert(uint i)external pure{... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_13:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_15\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_6:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":228:347   */\n    tag_18:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_21\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_13\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:645   */\n    tag_24:\n        /* \"#utility.yul\":605:612   */\n      0x00\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":623:639   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":651:831   */\n    tag_11:\n        /* \"#utility.yul\":699:776   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":696:697   */\n      0x00\n        /* \"#utility.yul\":689:777   */\n      mstore\n        /* \"#utility.yul\":796:800   */\n      0x01\n        /* \"#utility.yul\":793:794   */\n      0x04\n        /* \"#utility.yul\":786:801   */\n      mstore\n        /* \"#utility.yul\":820:824   */\n      0x24\n        /* \"#utility.yul\":817:818   */\n      0x00\n        /* \"#utility.yul\":810:825   */\n      revert\n        /* \"#utility.yul\":960:1077   */\n    tag_20:\n        /* \"#utility.yul\":1069:1070   */\n      0x00\n        /* \"#utility.yul\":1066:1067   */\n      dup1\n        /* \"#utility.yul\":1059:1071   */\n      revert\n        /* \"#utility.yul\":1083:1205   */\n    tag_16:\n        /* \"#utility.yul\":1156:1180   */\n      tag_31\n        /* \"#utility.yul\":1174:1179   */\n      dup2\n        /* \"#utility.yul\":1156:1180   */\n      tag_24\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1149:1154   */\n      dup2\n        /* \"#utility.yul\":1146:1181   */\n      eq\n        /* \"#utility.yul\":1136:1199   */\n      tag_32\n      jumpi\n        /* \"#utility.yul\":1195:1196   */\n      0x00\n        /* \"#utility.yul\":1192:1193   */\n      dup1\n        /* \"#utility.yul\":1185:1197   */\n      revert\n        /* \"#utility.yul\":1136:1199   */\n    tag_32:\n        /* \"#utility.yul\":1083:1205   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209902070793156c37dbb4d16ea9fce516b0227c31d78bfb375f821f3c10730a2e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610119806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063246ce3f914602d575b600080fd5b60436004803603810190603f91906069565b6045565b005b600a81116053576052609b565b5b50565b60008135905060638160cf565b92915050565b600060208284031215607c57607b60ca565b5b60006088848285016056565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600080fd5b60d6816091565b811460e057600080fd5b5056fea26469706673582212209902070793156c37dbb4d16ea9fce516b0227c31d78bfb375f821f3c10730a2e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x246CE3F9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x3F SWAP2 SWAP1 PUSH1 0x69 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA DUP2 GT PUSH1 0x53 JUMPI PUSH1 0x52 PUSH1 0x9B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x63 DUP2 PUSH1 0xCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7C JUMPI PUSH1 0x7B PUSH1 0xCA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP5 DUP3 DUP6 ADD PUSH1 0x56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD6 DUP2 PUSH1 0x91 JUMP JUMPDEST DUP2 EQ PUSH1 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 MUL SMOD SMOD SWAP4 ISZERO PUSH13 0x37DBB4D16EA9FCE516B0227C31 0xD7 DUP12 0xFB CALLDATACOPY 0x5F DUP3 0x1F EXTCODECOPY LT PUSH20 0xA2E64736F6C6343000807003300000000000000 ",
							"sourceMap": "53:127:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testAssert_13": {
									"entryPoint": 69,
									"id": 13,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 86,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1208:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "527:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "537:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "547:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "547:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "520:6:1",
														"type": ""
													}
												],
												"src": "487:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "623:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "605:7:1",
														"type": ""
													}
												],
												"src": "568:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "679:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "696:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "699:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "689:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "786:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "810:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "651:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "926:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "946:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "936:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "837:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1049:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1069:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1059:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "960:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1126:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1183:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1192:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1195:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1185:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1185:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1185:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1149:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1174:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1156:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1156:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1146:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1139:43:1"
															},
															"nodeType": "YulIf",
															"src": "1136:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1119:5:1",
														"type": ""
													}
												],
												"src": "1083:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063246ce3f914602d575b600080fd5b60436004803603810190603f91906069565b6045565b005b600a81116053576052609b565b5b50565b60008135905060638160cf565b92915050565b600060208284031215607c57607b60ca565b5b60006088848285016056565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b600080fd5b60d6816091565b811460e057600080fd5b5056fea26469706673582212209902070793156c37dbb4d16ea9fce516b0227c31d78bfb375f821f3c10730a2e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x246CE3F9 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH1 0x3F SWAP2 SWAP1 PUSH1 0x69 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA DUP2 GT PUSH1 0x53 JUMPI PUSH1 0x52 PUSH1 0x9B JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH1 0x63 DUP2 PUSH1 0xCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x7C JUMPI PUSH1 0x7B PUSH1 0xCA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x88 DUP5 DUP3 DUP6 ADD PUSH1 0x56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD6 DUP2 PUSH1 0x91 JUMP JUMPDEST DUP2 EQ PUSH1 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 MUL SMOD SMOD SWAP4 ISZERO PUSH13 0x37DBB4D16EA9FCE516B0227C31 0xD7 DUP12 0xFB CALLDATACOPY 0x5F DUP3 0x1F EXTCODECOPY LT PUSH20 0xA2E64736F6C6343000807003300000000000000 ",
							"sourceMap": "53:127:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;140:2;138:1;:4;131:12;;;;:::i;:::-;;81:97;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;568:77::-;605:7;634:5;623:16;;568:77;;;:::o;651:180::-;699:77;696:1;689:88;796:4;793:1;786:15;820:4;817:1;810:15;960:117;1069:1;1066;1059:12;1083:122;1156:24;1174:5;1156:24;:::i;:::-;1149:5;1146:35;1136:63;;1195:1;1192;1185:12;1136:63;1083:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "56200",
								"executionCost": "105",
								"totalCost": "56305"
							},
							"external": {
								"testAssert(uint256)": "434"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53,
									"end": 180,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 180,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209902070793156c37dbb4d16ea9fce516b0227c31d78bfb375f821f3c10730a2e64736f6c63430008070033",
									".code": [
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "246CE3F9"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 142,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 138,
											"end": 142,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 131,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 131,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 131,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 81,
											"end": 178,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 623,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 651,
											"end": 831,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 651,
											"end": 831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 776,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 796,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 793,
											"end": 794,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 801,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 820,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 817,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 825,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1077,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1083,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1174,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1197,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1136,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1205,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testAssert(uint256)": "246ce3f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"testAssert\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"study/chapter04/assert.sol\":\"testAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"study/chapter04/assert.sol\":{\"keccak256\":\"0xef66250156df39209abea2a03cad443d3175553cd1ac6e73c5c82128bdca6c29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e67c023048efc462bc22a0f25bfdd15bfef60cb2959158544b1a792bf201ed05\",\"dweb:/ipfs/QmbpCBZ8TJ5CMe6USdzKtsRy8xBQgTqoWRgAzjcWbKfp8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"study/chapter04/assert.sol": {
				"ast": {
					"absolutePath": "study/chapter04/assert.sol",
					"exportedSymbols": {
						"testAsset": [
							14
						]
					},
					"id": 15,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "31:20:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 14,
							"linearizedBaseContracts": [
								14
							],
							"name": "testAsset",
							"nameLocation": "62:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "121:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 7,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "138:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "3130",
																"id": 8,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "140:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"src": "138:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 6,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "131:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "131:12:0"
											}
										]
									},
									"functionSelector": "246ce3f9",
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testAssert",
									"nameLocation": "90:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "i",
												"nameLocation": "106:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "101:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "101:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "100:8:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "121:0:0"
									},
									"scope": 14,
									"src": "81:97:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 15,
							"src": "53:127:0",
							"usedErrors": []
						}
					],
					"src": "31:149:0"
				},
				"id": 0
			}
		}
	}
}