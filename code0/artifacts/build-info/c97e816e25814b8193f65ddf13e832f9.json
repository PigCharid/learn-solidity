{
	"id": "c97e816e25814b8193f65ddf13e832f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"code1/3error.sol": {
				"content": "pragma solidity ^0.8;\n\ncontract Test{\n    error errorAuth(address caller);//\n    address payable owner = payable(msg.sender);\n    function testError()public{\n        if(msg.sender!=owner){\n            revert errorAuth(msg.sender);//这种错误返回会节约gas  \n        }\n        owner.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"code1/3error.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "errorAuth",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "testError",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code1/3error.sol\":23:329  contract Test{... */\n  mstore(0x40, 0x80)\n    /* \"code1/3error.sol\":113:123  msg.sender */\n  caller\n    /* \"code1/3error.sol\":81:124  address payable owner = payable(msg.sender) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"code1/3error.sol\":23:329  contract Test{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code1/3error.sol\":23:329  contract Test{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1a7f70ec\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"code1/3error.sol\":130:327  function testError()public{... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"code1/3error.sol\":181:186  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":169:186  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":169:179  msg.sender */\n      caller\n        /* \"code1/3error.sol\":169:186  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"code1/3error.sol\":166:274  if(msg.sender!=owner){... */\n      tag_7\n      jumpi\n        /* \"code1/3error.sol\":218:228  msg.sender */\n      caller\n        /* \"code1/3error.sol\":208:229  errorAuth(msg.sender) */\n      mload(0x40)\n      0x69f2fd1100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code1/3error.sol\":166:274  if(msg.sender!=owner){... */\n    tag_7:\n        /* \"code1/3error.sol\":283:288  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":283:297  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":283:320  owner.transfer(address(this).balance) */\n      0x08fc\n        /* \"code1/3error.sol\":298:319  address(this).balance */\n      selfbalance\n        /* \"code1/3error.sol\":283:320  owner.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"code1/3error.sol\":130:327  function testError()public{... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_12:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_13:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_18\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_12\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_14:\n        /* \"#utility.yul\":328:352   */\n      tag_20\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_22\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_14\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b81c245fd5be76205fee583e672e66a3c9676e3e29c6af14b914ac111cd8dd4f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506101c5806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631a7f70ec14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ca57336040517f69f2fd110000000000000000000000000000000000000000000000000000000081526004016100c19190610174565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610130573d6000803e3d6000fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015e82610133565b9050919050565b61016e81610153565b82525050565b60006020820190506101896000830184610165565b9291505056fea2646970667358221220b81c245fd5be76205fee583e672e66a3c9676e3e29c6af14b914ac111cd8dd4f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A7F70EC EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x69F2FD1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0x153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SHR 0x24 0x5F 0xD5 0xBE PUSH23 0x205FEE583E672E66A3C9676E3E29C6AF14B914AC111CD8 0xDD 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "23:306:0:-:0;;;113:10;81:43;;;;;;;;;;;;;;;;;;;;23:306;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testError_37": {
									"entryPoint": 58,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80631a7f70ec14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ca57336040517f69f2fd110000000000000000000000000000000000000000000000000000000081526004016100c19190610174565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610130573d6000803e3d6000fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015e82610133565b9050919050565b61016e81610153565b82525050565b60006020820190506101896000830184610165565b9291505056fea2646970667358221220b81c245fd5be76205fee583e672e66a3c9676e3e29c6af14b914ac111cd8dd4f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A7F70EC EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x69F2FD1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E DUP3 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0x153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 SHR 0x24 0x5F 0xD5 0xBE PUSH23 0x205FEE583E672E66A3C9676E3E29C6AF14B914AC111CD8 0xDD 0x4F PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "23:306:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:197;;;:::i;:::-;;;181:5;;;;;;;;;;169:17;;:10;:17;;;166:108;;218:10;208:21;;;;;;;;;;;:::i;:::-;;;;;;;;166:108;283:5;;;;;;;;;;:14;;:37;298:21;283:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;130:197::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90600",
								"executionCost": "24407",
								"totalCost": "115007"
							},
							"external": {
								"testError()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 123,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 81,
									"end": 124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 81,
									"end": 124,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 81,
									"end": 124,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 81,
									"end": 124,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 81,
									"end": 124,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 329,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b81c245fd5be76205fee583e672e66a3c9676e3e29c6af14b914ac111cd8dd4f64736f6c634300080a0033",
									".code": [
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "1A7F70EC"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 327,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 327,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 181,
											"end": 186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 181,
											"end": 186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 181,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 181,
											"end": 186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 169,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 169,
											"end": 186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 169,
											"end": 179,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 169,
											"end": 186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 169,
											"end": 186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 169,
											"end": 186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 218,
											"end": 228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "69F2FD1100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 208,
											"end": 229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 274,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 283,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 298,
											"end": 319,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 283,
											"end": 320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testError()": "1a7f70ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"errorAuth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"testError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code1/3error.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code1/3error.sol\":{\"keccak256\":\"0x6d95318ec241f148a3129ec0b9b6c983a1def56c8aa4021c38d0cf5545209311\",\"urls\":[\"bzz-raw://880a3db4ea6b4ef8d52dfed0ab3902b85f29f06665dbcb499b86a98be41e824c\",\"dweb:/ipfs/QmRs61JLzQuQFcTwx7F6P15HYH2mcMpXTUYHh5aEnahhtG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "code1/3error.sol:Test",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> code1/3error.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "code1/3error.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code1/3error.sol": {
				"ast": {
					"absolutePath": "code1/3error.sol",
					"exportedSymbols": {
						"Test": [
							38
						]
					},
					"id": 39,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "0:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Test",
							"nameLocation": "32:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"name": "errorAuth",
									"nameLocation": "48:9:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "66:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "58:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57:16:0"
									},
									"src": "42:32:0"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "97:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "81:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "81:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"expression": {
													"id": 9,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "113:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 10,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "113:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 8,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "105:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "105:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "105:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "156:171:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "169:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "169:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "181:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "169:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 25,
												"nodeType": "IfStatement",
												"src": "166:108:0",
												"trueBody": {
													"id": 24,
													"nodeType": "Block",
													"src": "187:87:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 20,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "218:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "218:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 19,
																	"name": "errorAuth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "208:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "208:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 23,
															"nodeType": "RevertStatement",
															"src": "201:28:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "306:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Test_$38",
																			"typeString": "contract Test"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Test_$38",
																			"typeString": "contract Test"
																		}
																	],
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "298:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 29,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "298:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "298:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "298:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 26,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "283:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "283:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "283:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "283:37:0"
											}
										]
									},
									"functionSelector": "1a7f70ec",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testError",
									"nameLocation": "139:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "156:0:0"
									},
									"scope": 38,
									"src": "130:197:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 39,
							"src": "23:306:0",
							"usedErrors": [
								5
							]
						}
					],
					"src": "0:329:0"
				},
				"id": 0
			}
		}
	}
}