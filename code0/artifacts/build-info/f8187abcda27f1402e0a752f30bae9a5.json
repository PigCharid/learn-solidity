{
	"id": "f8187abcda27f1402e0a752f30bae9a5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"code1/safemath.sol": {
				"content": "pragma solidity ^0.8;\n\ncontract safemath{\n   \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"code1/safemath.sol": {
				"safemath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code1/safemath.sol\":23:47  contract safemath{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code1/safemath.sol\":23:47  contract safemath{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220717bf993066e1c7a88506070e42ce5c087ed3195692c231cf27b40dc02e8affe64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220717bf993066e1c7a88506070e42ce5c087ed3195692c231cf27b40dc02e8affe64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x7BF993066E1C7A88506070E42CE5C087ED31 SWAP6 PUSH10 0x2C231CF27B40DC02E8AF INVALID PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "23:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220717bf993066e1c7a88506070e42ce5c087ed3195692c231cf27b40dc02e8affe64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x7BF993066E1C7A88506070E42CE5C087ED31 SWAP6 PUSH10 0x2C231CF27B40DC02E8AF INVALID PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "23:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 47,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 47,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220717bf993066e1c7a88506070e42ce5c087ed3195692c231cf27b40dc02e8affe64736f6c634300080a0033",
									".code": [
										{
											"begin": 23,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 47,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 47,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 47,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 47,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code1/safemath.sol\":\"safemath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code1/safemath.sol\":{\"keccak256\":\"0x5368b88f36f3779facf33f7c3c47783c22441f576d91ed69f461d012706ac4fc\",\"urls\":[\"bzz-raw://6a900ab47a6d0b68a3845be1b395831bf8391bd63bd05dc16b6595f30f812b0a\",\"dweb:/ipfs/QmdPu26ED72M8As2k5XfHdkjFdLmUpChvJGoGMaif4gao9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> code1/safemath.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "code1/safemath.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code1/safemath.sol": {
				"ast": {
					"absolutePath": "code1/safemath.sol",
					"exportedSymbols": {
						"safemath": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "0:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "safemath",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "safemath",
							"nameLocation": "32:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "23:24:0",
							"usedErrors": []
						}
					],
					"src": "0:47:0"
				},
				"id": 0
			}
		}
	}
}