{
	"id": "a3ae5165c08cc2aed874e890a83645fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"code1/3error.sol": {
				"content": "pragma solidity ^0.8;\n\ncontract Test{\n    error errorAuth();\n    address payable owner = payable(msg.sender);\n    function testError()public{\n        if(msg.sender!=owner){\n            revert errorAuth();\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"code1/3error.sol": {
				"Test": {
					"abi": [
						{
							"inputs": [],
							"name": "errorAuth",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "testError",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"code1/3error.sol\":23:222  contract Test{... */\n  mstore(0x40, 0x80)\n    /* \"code1/3error.sol\":97:107  msg.sender */\n  caller\n    /* \"code1/3error.sol\":65:108  address payable owner = payable(msg.sender) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"code1/3error.sol\":23:222  contract Test{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"code1/3error.sol\":23:222  contract Test{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1a7f70ec\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"code1/3error.sol\":114:220  function testError()public{... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"code1/3error.sol\":165:170  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":153:170  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"code1/3error.sol\":153:163  msg.sender */\n      caller\n        /* \"code1/3error.sol\":153:170  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"code1/3error.sol\":150:214  if(msg.sender!=owner){... */\n      tag_7\n      jumpi\n        /* \"code1/3error.sol\":192:203  errorAuth() */\n      mload(0x40)\n      0x0849e86f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"code1/3error.sol\":150:214  if(msg.sender!=owner){... */\n    tag_7:\n        /* \"code1/3error.sol\":114:220  function testError()public{... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077c1a17642091c255bcdc9a2ffc972e5f779ceb872de15b155462cd7c577185664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5060f18061005f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80631a7f70ec14602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460b9576040517f0849e86f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b56fea264697066735822122077c1a17642091c255bcdc9a2ffc972e5f779ceb872de15b155462cd7c577185664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF1 DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A7F70EC EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x849E86F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xC1A17642091C255BCDC9A2FFC972E5F779CEB872DE15B155 CHAINID 0x2C 0xD7 0xC5 PUSH24 0x185664736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "23:199:0:-:0;;;97:10;65:43;;;;;;;;;;;;;;;;;;;;23:199;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testError_23": {
									"entryPoint": 53,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80631a7f70ec14602d575b600080fd5b60336035565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161460b9576040517f0849e86f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b56fea264697066735822122077c1a17642091c255bcdc9a2ffc972e5f779ceb872de15b155462cd7c577185664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A7F70EC EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x35 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0xB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x849E86F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xC1A17642091C255BCDC9A2FFC972E5F779CEB872DE15B155 CHAINID 0x2C 0xD7 0xC5 PUSH24 0x185664736F6C634300080A00330000000000000000000000 ",
							"sourceMap": "23:199:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;114:106;;;:::i;:::-;;;165:5;;;;;;;;;;153:17;;:10;:17;;;150:64;;192:11;;;;;;;;;;;;;;150:64;114:106::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48200",
								"executionCost": "24365",
								"totalCost": "72565"
							},
							"external": {
								"testError()": "2324"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 97,
									"end": 107,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 108,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 65,
									"end": 108,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 65,
									"end": 108,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 65,
									"end": 108,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 108,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23,
									"end": 222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23,
									"end": 222,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077c1a17642091c255bcdc9a2ffc972e5f779ceb872de15b155462cd7c577185664736f6c634300080a0033",
									".code": [
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "1A7F70EC"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23,
											"end": 222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23,
											"end": 222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 114,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 220,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 114,
											"end": 220,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 114,
											"end": 220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 165,
											"end": 170,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 165,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 165,
											"end": 170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 163,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 153,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 153,
											"end": 170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 153,
											"end": 170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "849E86F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 192,
											"end": 203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 192,
											"end": 203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 150,
											"end": 214,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 114,
											"end": 220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testError()": "1a7f70ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"errorAuth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"testError\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"code1/3error.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"code1/3error.sol\":{\"keccak256\":\"0xf94d8e634ae983cc874c6924c8ddf209df4727f3b0aeda8903b50fe3506daed4\",\"urls\":[\"bzz-raw://adbced32cb6884e5ef3f61f1a29d56f2998c01084365735256b518322d62868b\",\"dweb:/ipfs/QmcRVHHVYj8jbKVPdT3aZzqS2K8cUhfSraFsVJ1SzaEPrt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "code1/3error.sol:Test",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> code1/3error.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "code1/3error.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n --> code1/3error.sol:6:5:\n  |\n6 |     function testError()public{\n  |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 220,
					"file": "code1/3error.sol",
					"start": 114
				},
				"type": "Warning"
			}
		],
		"sources": {
			"code1/3error.sol": {
				"ast": {
					"absolutePath": "code1/3error.sol",
					"exportedSymbols": {
						"Test": [
							24
						]
					},
					"id": 25,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "0:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "Test",
							"nameLocation": "32:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3,
									"name": "errorAuth",
									"nameLocation": "48:9:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57:2:0"
									},
									"src": "42:18:0"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "81:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "65:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "65:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"expression": {
													"id": 7,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "97:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 8,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "97:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "89:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 5,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "89:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "89:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "140:80:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "153:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "153:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 15,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "165:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "153:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 21,
												"nodeType": "IfStatement",
												"src": "150:64:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "171:43:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 17,
																	"name": "errorAuth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "192:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "192:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 19,
															"nodeType": "RevertStatement",
															"src": "185:18:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1a7f70ec",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testError",
									"nameLocation": "123:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "132:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "140:0:0"
									},
									"scope": 24,
									"src": "114:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 25,
							"src": "23:199:0",
							"usedErrors": [
								3
							]
						}
					],
					"src": "0:222:0"
				},
				"id": 0
			}
		}
	}
}