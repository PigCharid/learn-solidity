{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506104fb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d834a1b1461003b578063853255cc1461006b575b600080fd5b61005560048036038101906100509190610338565b610089565b6040516100629190610387565b60405180910390f35b6100736100b0565b6040516100809190610387565b60405180910390f35b60006100a1838360006101209092919063ffffffff16565b50600060020154905092915050565b6000806100bd6000610214565b90505b6100d481600061024790919063ffffffff16565b1561011c5760006100ef82600061025b90919063ffffffff16565b91505080836100fe91906103a2565b9250506101158160006102aa90919063ffffffff16565b90506100c0565b5090565b6000808460000160008581526020019081526020016000206000015490508285600001600086815260200190815260200160002060010181905550600081111561016e57600191505061020d565b8460010180549050905084600101600181600181540180825580915050039060005260206000209050506001816101a591906103a2565b85600001600086815260200190815260200160002060000181905550838560010182815481106101d8576101d761047a565b5b90600052602060002090600202016000018190555084600201600081548092919061020290610402565b919050555060009150505b9392505050565b6000610240827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6102aa565b9050919050565b600082600101805490508210905092915050565b6000808360010183815481106102745761027361047a565b5b90600052602060002090600202016000015491508360000160008381526020019081526020016000206001015490509250929050565b600081806102b790610402565b9250505b82600101805490508210801561030257508260010182815481106102e2576102e161047a565b5b906000526020600020906002020160010160009054906101000a900460ff165b1561031a57818061031290610402565b9250506102bb565b81905092915050565b600081359050610332816104ae565b92915050565b6000806040838503121561034f5761034e6104a9565b5b600061035d85828601610323565b925050602061036e85828601610323565b9150509250929050565b610381816103f8565b82525050565b600060208201905061039c6000830184610378565b92915050565b60006103ad826103f8565b91506103b8836103f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103ed576103ec61044b565b5b828201905092915050565b6000819050919050565b600061040d826103f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156104405761043f61044b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6104b7816103f8565b81146104c257600080fd5b5056fea264697066735822122064098b60368e72c27456afeb1c2b03694d5d8305cb8f7fdb770a69d2ebd14e8964736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4FB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D834A1B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA1 DUP4 DUP4 PUSH1 0x0 PUSH2 0x120 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD PUSH1 0x0 PUSH2 0x214 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD4 DUP2 PUSH1 0x0 PUSH2 0x247 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 PUSH2 0xEF DUP3 PUSH1 0x0 PUSH2 0x25B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x115 DUP2 PUSH1 0x0 PUSH2 0x2AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP5 PUSH1 0x1 ADD PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH1 0x1 DUP2 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D7 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x202 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH2 0x2B7 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT DUP1 ISZERO PUSH2 0x302 JUMPI POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x31A JUMPI DUP2 DUP1 PUSH2 0x312 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2BB JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x332 DUP2 PUSH2 0x4AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0x4A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP6 DUP3 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36E DUP6 DUP3 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP4 PUSH2 0x3F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x3EC PUSH2 0x44B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x440 JUMPI PUSH2 0x43F PUSH2 0x44B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7 DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x98B60368E PUSH19 0xC27456AFEB1C2B03694D5D8305CB8F7FDB770A PUSH10 0xD2EBD14E8964736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "2309:804:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@insert_100": {
					"entryPoint": 288,
					"id": 100,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"@insert_289": {
					"entryPoint": 137,
					"id": 289,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@iterate_get_261": {
					"entryPoint": 603,
					"id": 261,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"@iterate_next_232": {
					"entryPoint": 682,
					"id": 232,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@iterate_start_184": {
					"entryPoint": 532,
					"id": 184,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"@iterate_valid_201": {
					"entryPoint": 583,
					"id": 201,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@sum_325": {
					"entryPoint": 176,
					"id": 325,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 803,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256t_uint256": {
					"entryPoint": 824,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 2
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 888,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 903,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
					"entryPoint": 930,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 1016,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"increment_t_uint256": {
					"entryPoint": 1026,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 1099,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x32": {
					"entryPoint": 1146,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 1193,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 1198,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:2441:1",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "59:87:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "69:29:1",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "91:6:1"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "78:12:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "78:20:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "69:5:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "134:5:1"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "107:26:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "107:33:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "107:33:1"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "37:6:1",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "45:3:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "53:5:1",
										"type": ""
									}
								],
								"src": "7:139:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "235:391:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "281:83:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "283:77:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "283:79:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "283:79:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "256:7:1"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "265:9:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "252:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "252:23:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "277:2:1",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "248:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "248:32:1"
											},
											"nodeType": "YulIf",
											"src": "245:119:1"
										},
										{
											"nodeType": "YulBlock",
											"src": "374:117:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "389:15:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "403:1:1",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "393:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "418:63:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "453:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "464:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "449:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "473:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "428:20:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "428:53:1"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "418:6:1"
														}
													]
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "501:118:1",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "516:16:1",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "530:2:1",
														"type": "",
														"value": "32"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "520:6:1",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "546:63:1",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "581:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "592:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:22:1"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "601:7:1"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "556:20:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "556:53:1"
													},
													"variableNames": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "546:6:1"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "197:9:1",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "208:7:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "220:6:1",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "228:6:1",
										"type": ""
									}
								],
								"src": "152:474:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "697:53:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "714:3:1"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "737:5:1"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "719:17:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "719:24:1"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "707:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "707:37:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "707:37:1"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "685:5:1",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "692:3:1",
										"type": ""
									}
								],
								"src": "632:118:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "854:124:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "864:26:1",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "876:9:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "887:2:1",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "872:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "872:18:1"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "864:4:1"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "944:6:1"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "957:9:1"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "968:1:1",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "953:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "953:17:1"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "900:43:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "900:71:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "900:71:1"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "826:9:1",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "838:6:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "849:4:1",
										"type": ""
									}
								],
								"src": "756:222:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1024:35:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1034:19:1",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1050:2:1",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1044:5:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1044:9:1"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1034:6:1"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1017:6:1",
										"type": ""
									}
								],
								"src": "984:75:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1109:261:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1119:25:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1142:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1124:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1124:20:1"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "1119:1:1"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "1153:25:1",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1176:1:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1158:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1158:20:1"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "1153:1:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1316:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "1318:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1318:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1318:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1237:1:1"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1244:66:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "1312:1:1"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1240:3:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "1240:74:1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "1234:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1234:81:1"
											},
											"nodeType": "YulIf",
											"src": "1231:107:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1348:16:1",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "1359:1:1"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "1362:1:1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1355:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1355:9:1"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "1348:3:1"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "1096:1:1",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "1099:1:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "1105:3:1",
										"type": ""
									}
								],
								"src": "1065:305:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1421:32:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1431:16:1",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1442:5:1"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1431:7:1"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1403:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1413:7:1",
										"type": ""
									}
								],
								"src": "1376:77:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1502:190:1",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1512:33:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1539:5:1"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "1521:17:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1521:24:1"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1512:5:1"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1635:22:1",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "1637:16:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "1637:18:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1637:18:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1560:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1567:66:1",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "1557:2:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1557:77:1"
											},
											"nodeType": "YulIf",
											"src": "1554:103:1"
										},
										{
											"nodeType": "YulAssignment",
											"src": "1666:20:1",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1677:5:1"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1684:1:1",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1673:3:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1673:13:1"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "1666:3:1"
												}
											]
										}
									]
								},
								"name": "increment_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1488:5:1",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "1498:3:1",
										"type": ""
									}
								],
								"src": "1459:233:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1726:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1743:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1746:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1736:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1736:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1736:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1840:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1843:4:1",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1833:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1833:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1833:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1864:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1867:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1857:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1857:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1857:15:1"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "1698:180:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1912:152:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1929:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1932:77:1",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1922:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "1922:88:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1922:88:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2026:1:1",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2029:4:1",
														"type": "",
														"value": "0x32"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2019:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2019:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2019:15:1"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2050:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2053:4:1",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2043:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2043:15:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2043:15:1"
										}
									]
								},
								"name": "panic_error_0x32",
								"nodeType": "YulFunctionDefinition",
								"src": "1884:180:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2159:28:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2176:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2179:1:1",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2169:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2169:12:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2169:12:1"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2070:117:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2282:28:1",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2299:1:1",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2302:1:1",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2292:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2292:12:1"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2292:12:1"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "2193:117:1"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2359:79:1",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2416:16:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2425:1:1",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2428:1:1",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2418:6:1"
															},
															"nodeType": "YulFunctionCall",
															"src": "2418:12:1"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2418:12:1"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2382:5:1"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2407:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2389:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:24:1"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2379:2:1"
														},
														"nodeType": "YulFunctionCall",
														"src": "2379:35:1"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2372:6:1"
												},
												"nodeType": "YulFunctionCall",
												"src": "2372:43:1"
											},
											"nodeType": "YulIf",
											"src": "2369:63:1"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2352:5:1",
										"type": ""
									}
								],
								"src": "2316:122:1"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
					"id": 1,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d834a1b1461003b578063853255cc1461006b575b600080fd5b61005560048036038101906100509190610338565b610089565b6040516100629190610387565b60405180910390f35b6100736100b0565b6040516100809190610387565b60405180910390f35b60006100a1838360006101209092919063ffffffff16565b50600060020154905092915050565b6000806100bd6000610214565b90505b6100d481600061024790919063ffffffff16565b1561011c5760006100ef82600061025b90919063ffffffff16565b91505080836100fe91906103a2565b9250506101158160006102aa90919063ffffffff16565b90506100c0565b5090565b6000808460000160008581526020019081526020016000206000015490508285600001600086815260200190815260200160002060010181905550600081111561016e57600191505061020d565b8460010180549050905084600101600181600181540180825580915050039060005260206000209050506001816101a591906103a2565b85600001600086815260200190815260200160002060000181905550838560010182815481106101d8576101d761047a565b5b90600052602060002090600202016000018190555084600201600081548092919061020290610402565b919050555060009150505b9392505050565b6000610240827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6102aa565b9050919050565b600082600101805490508210905092915050565b6000808360010183815481106102745761027361047a565b5b90600052602060002090600202016000015491508360000160008381526020019081526020016000206001015490509250929050565b600081806102b790610402565b9250505b82600101805490508210801561030257508260010182815481106102e2576102e161047a565b5b906000526020600020906002020160010160009054906101000a900460ff165b1561031a57818061031290610402565b9250506102bb565b81905092915050565b600081359050610332816104ae565b92915050565b6000806040838503121561034f5761034e6104a9565b5b600061035d85828601610323565b925050602061036e85828601610323565b9150509250929050565b610381816103f8565b82525050565b600060208201905061039c6000830184610378565b92915050565b60006103ad826103f8565b91506103b8836103f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103ed576103ec61044b565b5b828201905092915050565b6000819050919050565b600061040d826103f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156104405761043f61044b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6104b7816103f8565b81146104c257600080fd5b5056fea264697066735822122064098b60368e72c27456afeb1c2b03694d5d8305cb8f7fdb770a69d2ebd14e8964736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D834A1B EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x853255CC EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA1 DUP4 DUP4 PUSH1 0x0 PUSH2 0x120 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD PUSH1 0x0 PUSH2 0x214 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0xD4 DUP2 PUSH1 0x0 PUSH2 0x247 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 PUSH2 0xEF DUP3 PUSH1 0x0 PUSH2 0x25B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP DUP1 DUP4 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x115 DUP2 PUSH1 0x0 PUSH2 0x2AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP5 PUSH1 0x1 ADD PUSH1 0x1 DUP2 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP POP PUSH1 0x1 DUP2 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D8 JUMPI PUSH2 0x1D7 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x202 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP4 PUSH1 0x0 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH2 0x2B7 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP3 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP3 LT DUP1 ISZERO PUSH2 0x302 JUMPI POP DUP3 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x47A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x31A JUMPI DUP2 DUP1 PUSH2 0x312 SWAP1 PUSH2 0x402 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2BB JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x332 DUP2 PUSH2 0x4AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0x4A9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x35D DUP6 DUP3 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x36E DUP6 DUP3 DUP7 ADD PUSH2 0x323 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AD DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B8 DUP4 PUSH2 0x3F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x3EC PUSH2 0x44B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D DUP3 PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x440 JUMPI PUSH2 0x43F PUSH2 0x44B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B7 DUP2 PUSH2 0x3F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x98B60368E PUSH19 0xC27456AFEB1C2B03694D5D8305CB8F7FDB770A PUSH10 0xD2EBD14E8964736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
			"sourceMap": "2309:804:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2835:276;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2495:291;2543:9;2621:17;2633:1;2636;2621:4;:11;;:17;;;;;:::i;:::-;;2767:4;:9;;;2760:16;;2495:291;;;;:::o;2835:276::-;2871:6;2907;2916:20;:4;:18;:20::i;:::-;2907:29;;2889:216;2950:21;2969:1;2950:4;:18;;:21;;;;:::i;:::-;2889:216;;;3037:10;3051:19;3068:1;3051:4;:16;;:19;;;;:::i;:::-;3034:36;;;3089:5;3084:10;;;;;:::i;:::-;;;3020:85;2989:20;3007:1;2989:4;:17;;:20;;;;:::i;:::-;2985:24;;2889:216;;;;2835:276;:::o;355:717::-;431:13;494;510:4;:9;;:14;520:3;510:14;;;;;;;;;;;:23;;;494:39;;590:5;567:4;:9;;:14;577:3;567:14;;;;;;;;;;;:20;;:28;;;;722:1;711:8;:12;707:359;;;744:4;737:11;;;;;707:359;837:4;:9;;:16;;;;826:27;;893:4;:9;;:16;;;;;;;;;;;;;;;;;;;;;;;960:1;949:8;:12;;;;:::i;:::-;923:4;:9;;:14;933:3;923:14;;;;;;;;;;;:23;;:38;;;;1001:3;975:4;:9;;985:8;975:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;:29;;;;1018:4;:9;;;:11;;;;;;;;;:::i;:::-;;;;;;1050:5;1043:12;;;355:717;;;;;;:::o;1562:139::-;1628:13;1660:34;1673:4;1679:14;1660:12;:34::i;:::-;1653:41;;1562:139;;;:::o;1707:138::-;1788:4;1822;:9;;:16;;;;1811:8;:27;1804:34;;1707:138;;;;:::o;2105:185::-;2184:8;2194:10;2222:4;:9;;2232:8;2222:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;2216:29;;2263:4;:9;;:14;2273:3;2263:14;;;;;;;;;;;:20;;;2255:28;;2105:185;;;;;:::o;1851:248::-;1931:15;1958:10;;;;;:::i;:::-;;;;1978:89;1996:4;:9;;:16;;;;1985:8;:27;:58;;;;;2016:4;:9;;2026:8;2016:19;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;;;;;;;;;;1985:58;1978:89;;;2057:10;;;;;:::i;:::-;;;;1978:89;;;2084:8;2077:15;;1851:248;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:474::-;220:6;228;277:2;265:9;256:7;252:23;248:32;245:119;;;283:79;;:::i;:::-;245:119;403:1;428:53;473:7;464:6;453:9;449:22;428:53;:::i;:::-;418:63;;374:117;530:2;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;501:118;152:474;;;;;:::o;632:118::-;719:24;737:5;719:24;:::i;:::-;714:3;707:37;632:118;;:::o;756:222::-;849:4;887:2;876:9;872:18;864:26;;900:71;968:1;957:9;953:17;944:6;900:71;:::i;:::-;756:222;;;;:::o;1065:305::-;1105:3;1124:20;1142:1;1124:20;:::i;:::-;1119:25;;1158:20;1176:1;1158:20;:::i;:::-;1153:25;;1312:1;1244:66;1240:74;1237:1;1234:81;1231:107;;;1318:18;;:::i;:::-;1231:107;1362:1;1359;1355:9;1348:16;;1065:305;;;;:::o;1376:77::-;1413:7;1442:5;1431:16;;1376:77;;;:::o;1459:233::-;1498:3;1521:24;1539:5;1521:24;:::i;:::-;1512:33;;1567:66;1560:5;1557:77;1554:103;;;1637:18;;:::i;:::-;1554:103;1684:1;1677:5;1673:13;1666:20;;1459:233;;;:::o;1698:180::-;1746:77;1743:1;1736:88;1843:4;1840:1;1833:15;1867:4;1864:1;1857:15;1884:180;1932:77;1929:1;1922:88;2029:4;2026:1;2019:15;2053:4;2050:1;2043:15;2193:117;2302:1;2299;2292:12;2316:122;2389:24;2407:5;2389:24;:::i;:::-;2382:5;2379:35;2369:63;;2428:1;2425;2418:12;2369:63;2316:122;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "255000",
				"executionCost": "294",
				"totalCost": "255294"
			},
			"external": {
				"insert(uint256,uint256)": "infinite",
				"sum()": "328"
			}
		},
		"methodIdentifiers": {
			"insert(uint256,uint256)": "1d834a1b",
			"sum()": "853255cc"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "k",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "v",
					"type": "uint256"
				}
			],
			"name": "insert",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "size",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "sum",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "s",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}